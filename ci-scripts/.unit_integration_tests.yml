# this config file defines the unit and integration tests which run as a first stage.
# to execute them, eXist-db is built and started once.
# if one of the test fails, the complete pipeline fails.

# Templates

.job_definition: &job_definition
  image: docker.gitlab.gwdg.de/mrodzis/docker-images/alpine-exist-unit-tests
  stage: unit_tests

.start_db: &start_db
  - ant -f exist-app/build.xml test
  - ash exist-app/test/bin/startup.sh | tee output.log &
  - while [ $(curl --head --silent http://localhost:8080 | grep -c "200 OK") == 0 ]; do sleep 1s; done

.evaluate_results: &evaluate_results
  - status=$(echo $header | head -n 1 | cut -d" " -f 2)
  - echo "Current HTTP status is $status."
  - if [[ "$status" != "200" ]]; then exit 1; fi
  - ash exist-app/test/bin/shutdown.sh
  - failures=$(xmllint --xpath 'count(/tests/PROBLEM)' exist-app/test/ahikar-test-results.xml)
  - echo -e "\033[1;33mThere is/are currently $failures failures or errors.\033[0m"
  - if [[ "$failures" -gt 0 || ! -f "exist-app/test/ahikar-test-results.xml" ]]; then exit 1; else exit 0; fi

.artifact_definition: &artifact_definition
  artifacts:
    when: always
    paths:
      - exist-app/test/ahikar-test-results.xml
      - exist-app/test/logs/*.log
    reports:
      junit: exist-app/test/ahikar-test-results.xml
  cache:
    key: exist-dependencies
    paths:
      - exist-app/build/dependencies/openapi-latest.xar
      - exist-app/build/dependencies/tg-connect-standalone.xar
      - exist-app/build/eXist*.xar

unit_and_integration_tests:
  <<: *job_definition
  script:
    - *start_db
    - curl --head -s http://localhost:8080/exist/restxq/prepare-unit-tests
    - header=$(curl --head -s http://localhost:8080/exist/restxq/trigger-unit-tests)
    - echo "Evalutate unit tests…"
    - *evaluate_results
    - header=$(curl --head -s http://localhost:8080/exist/restxq/trigger-api-tests)
    - echo "Evaluate integration tests…"
    - *evaluate_results
  <<: *artifact_definition
